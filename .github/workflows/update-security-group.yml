name: Update EC2 Security Group with GitHub IPs

on:
  schedule:
    - cron: "0 0 * * *" # Daily at midnight UTC
  workflow_dispatch:

permissions:
  id-token: write # Required for OIDC
  contents: read # For checking out code if needed

jobs:
  update-sg:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::687661491824:role/github-actions-role-new
          aws-region: us-east-1
          role-session-name: GitHubActions-${{ github.run_id }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Update Security Group
        run: |
          # Get GitHub Actions IP ranges
          IPS=$(curl -s https://api.github.com/meta | jq -r '.actions[]')

          # First revoke existing GitHub IP ranges
          EXISTING_RULES=$(aws ec2 describe-security-groups \
              --group-id ${{ secrets.SECURITY_GROUP_ID }} \
              --query "SecurityGroups[0].IpPermissions[?ToPort==\`22\`].IpRanges[].CidrIp" \
              --output text)

          for ip in $EXISTING_RULES; do
            if [[ $ip == 192.30.252.* || $ip == 185.199.108.* ]]; then
              aws ec2 revoke-security-group-ingress \
                  --group-id ${{ secrets.SECURITY_GROUP_ID }} \
                  --protocol tcp \
                  --port 22 \
                  --cidr $ip || true
            fi
          done

          # Add new rules
          for ip in $IPS; do
            aws ec2 authorize-security-group-ingress \
                --group-id ${{ secrets.SECURITY_GROUP_ID }} \
                --protocol tcp \
                --port 22 \
                --cidr $ip
          done
