name: Laravel CI/CD with Docker

on:
  push:
    branches: ["main"]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/laravel-api
  DOCKER_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

  pre-deploy-check:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Verify EC2 Reachability
        run: nc -zv -w 5 ${{ secrets.AWS_EC2_HOST }} 22

  deploy:
    needs: pre-deploy-check
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/ec2_key
          chmod 600 ~/.ssh/ec2_key
          echo "${{ secrets.AWS_EC2_HOST_KEY }}" >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: |
          ssh -i ~/.ssh/ec2_key \
              -o StrictHostKeyChecking=no \
              ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} \
              "echo 'SSH connection successful!'"

      - name: Deploy Application
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          script: |
            # Install Docker
            if ! command -v docker &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl enable docker
              sudo systemctl start docker
            fi

            # Docker operations
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            sudo docker pull ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

            # Stop existing container
            sudo docker stop laravel-app || true
            sudo docker rm laravel-app || true

            # Setup environment
            mkdir -p /home/ubuntu/laravel-app/storage
            echo "${{ secrets.DOT_ENV }}" > /home/ubuntu/laravel-app/.env

            # Run container
            sudo docker run -d \
              --name laravel-app \
              -p 80:80 \
              --restart unless-stopped \
              -v /home/ubuntu/laravel-app/.env:/var/www/html/.env \
              -v /home/ubuntu/laravel-app/storage:/var/www/html/storage \
              ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

            # Post-deploy
            sleep 10 # Wait for the container to be ready
            sudo docker exec laravel-app php artisan optimize
