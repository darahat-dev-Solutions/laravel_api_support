name: Laravel CI/CD with Docker

on:
  push:
    branches: ["main"]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/laravel-api
  DOCKER_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Check SSH connectivity
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            echo "SSH connection successful!"
          timeout: 30s

      - name: Deploy application
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # Install Docker if not present
            if ! command -v docker &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl enable docker
              sudo systemctl start docker
              sudo usermod -aG docker $USER
            fi

            # Login to Docker Hub
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

            # Stop and remove existing container
            docker stop laravel-app || true
            docker rm laravel-app || true

            # Pull the latest image
            docker pull ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

            # Create directory structure
            mkdir -p /home/ubuntu/laravel-app/storage
            echo "${{ secrets.DOT_ENV }}" > /home/ubuntu/laravel-app/.env

            # Run container
            docker run -d \
              --name laravel-app \
              -p 80:80 \
              --restart unless-stopped \
              -v /home/ubuntu/laravel-app/.env:/var/www/html/.env \
              -v /home/ubuntu/laravel-app/storage:/var/www/html/storage \
              ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

            # Run maintenance commands
            docker exec laravel-app php artisan storage:link || true
            docker exec laravel-app php artisan optimize || true
          timeout: 10m
